services:
  web-query-service:
    build: .
    command: python app.py
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    depends_on:
      db-init:
        condition: service_completed_successfully

  podcast-downloader:
    build: .
    command: python src/podcast_download_service.py
    volumes:
      - .:/app
    depends_on:
      db-init:
        condition: service_completed_successfully

  transcription-service:
    build: .
    command: python src/transcription_service.py
    volumes:
      - .:/app
    depends_on:
      db-init:
        condition: service_completed_successfully

  db-init:
    build: .
    command: sh -c "sleep 5 && python scripts/init_db.py --yes"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 